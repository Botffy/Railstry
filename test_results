
User
  should create a new instance given valid attributes
  should require a name
  should reject overlong names
  should require an email address
  should accept valid email addresses
  should reject invalid email addresses
  should reject duplicate email addresses
  should reject duplicate email adresses case-insensitively
  password validations
    should require a password
    should require a matching password confirmation
    should reject short passwords
    should reject overlong passwords
  password encryption
    should have an encrypted password attribute
    should set the encrypted password
    has_password? method
      should be true if the passwords match
      should be false if the passwords don't match
    authenticate method
      should return nil when there's an email/password mismatch
      should return nil for unknown email addresses
      should return the user object if there's a match

PagesController
  GET 'home'
    should be successful
    should have the correct title
  GET 'contact'
    should be successful
    should have the correct title
  GET 'help'
    should be successful
    should have the correct title
  GET 'about' page
    should be successful
    should have the correct title

UsersController
  GET 'new'
    should be successful
    should have the right title
  GET 'show'
    should be successful
    should find the correct user
    should have the right title
    should include the user's name in a h1
    should have a profile image around the name

LayoutLinks
  should have the Home page at root
  should have the Contact page at '/contact'
  should have the About page at '/about'
  should have the Help page at '/help'
  should have the Signup page at '/signup'
  should have the right links leading to the right pages

Finished in 6.03 seconds
40 examples, 0 failures
