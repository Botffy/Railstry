
User
  should create a new instance given valid attributes
  should require a name
  should reject overlong names
  should require an email address
  should accept valid email addresses
  should reject invalid email addresses
  should reject duplicate email addresses
  should reject duplicate email adresses case-insensitively
  password validations
    should require a password
    should require a matching password confirmation
    should reject short passwords
    should reject overlong passwords
  password encryption
    should have an encrypted password attribute
    should set the encrypted password
    has_password? method
      should be true if the passwords match
      should be false if the passwords don't match
    authenticate method
      should return nil when there's an email/password mismatch
      should return nil for unknown email addresses
      should return the user object if there's a match
  being an admin
    should be an attribute indeed
    should not be an admin by default
    should be made admin

PagesController
  GET 'home'
    should be successful
    should have the correct title
  GET 'contact'
    should be successful
    should have the correct title
  GET 'help'
    should be successful
    should have the correct title
  GET 'about' page
    should be successful
    should have the correct title

UsersController
  GET 'new'
    should be successful
    should have the right title
    should have a name field
    should have an email field
    should have a password field
    should have a password confirmation field
  GET 'edit'
    should be successful
    should have the right title
    should have a link to change Gravatar
  PUT 'update'
    failure
      should render the edit page again
      should have the right title
    success
      should change the user's attributes
      should redirect to the users profile
      should have a flash notification
  POST 'create'
    failure
      should not create a user
      should have the right title
      should render the new page
    success
      should create a user
      should redirect to the user's profile on success
      should have a welcome message flash
      should sign the user in
  GET 'show'
    should be successful
    should find the correct user
    should have the right title
    should include the user's name in a h1
    should have a profile image around the name
  authentication of edit/update
    for visitors
      should deny access to the edit page
      should deny access to the update action
    for other users
      should require that a user can access only his own edit page
      should require that a user can only update his own data
  DELETE 'destroy'
    as a visitor
      should deny the request
    as a user who's not an admin
      should protect the page
    as an admin
      should destroy the user
      should redirect to the userindex
      should not destroy himself
  GET 'index'
    for visitors
      should deny access
    for signed-in users
      should be successful
      should have the right title
      should have entries for the existing users
      should paginate the user page

SessionsController
  GET 'new'
    should be successful
    should have the right title
  DELETE 'destroy'
    should sign the user out
  POST 'create'
    successful signin
      should sign in the user
      should redirect to the user's profile
      should also show a welcome back message
    invalid signin
      should redirect back to the login page
      should have the correct title
      should have a flash message

Users
  signup
    failure
      should not make a new user
    success
      should make a new user
  sign in/sign out
    failure
      should not sign a user in
    successive successes
      should sign a user in and out

FriendlyForwardings
  should forward to the required page after signin

LayoutLinks
  should have the Home page at root
  should have the Contact page at '/contact'
  should have the About page at '/about'
  should have the Help page at '/help'
  should have the Signup page at '/signup'
  should have the right links leading to the right pages
  when not signed in
    should have a 'sign in' link that leads to the signin page
  when signed in
    should have a signout link
    should have a profile link
    should not have signup link on front page

Finished in 12.57 seconds
94 examples, 0 failures
